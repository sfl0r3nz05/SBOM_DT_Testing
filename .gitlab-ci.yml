stages:
  - check
  #- build
  - test

security-check:
  stage: check
  image:
   name: aquasec/trivy:latest
   entrypoint: [""] 
  tags:
    - sbom
  script:
  - trivy --insecure --format cyclonedx --output source.json fs .
  artifacts:
    paths:
      - source.json

build:
  stage: build
  image: 
    name: aquasec/trivy:latest
    entrypoint: [""]
  tags:
    - sbom
  script:
    - echo "Building Docker image..."
    - docker build -t vulnerable-flask-app:$CI_COMMIT_REF_SLUG .

security_scan:
  stage: test
  image: docker:stable
  tags:
    - sbom
  script:
    - trivy image --insecure --scanners vuln --format cyclonedx --output build.json vulnerable-flask-app:0.1
  artifacts:
    paths:
      - build.json
